// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.17.3
// source: phone.proto

package phone

import (
	context "context"

	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PhoneCallServiceClient is the client API for PhoneCallService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PhoneCallServiceClient interface {
	// Send voice using the specific template
	SendVoiceWithTemplate(ctx context.Context, in *SendVoiceWithTemplateRequest, opts ...grpc.CallOption) (*SendVoiceWithTemplateResponse, error)
}

type phoneCallServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPhoneCallServiceClient(cc grpc.ClientConnInterface) PhoneCallServiceClient {
	return &phoneCallServiceClient{cc}
}

func (c *phoneCallServiceClient) SendVoiceWithTemplate(ctx context.Context, in *SendVoiceWithTemplateRequest, opts ...grpc.CallOption) (*SendVoiceWithTemplateResponse, error) {
	out := new(SendVoiceWithTemplateResponse)
	err := c.cc.Invoke(ctx, "/spec.proto.extension.v1.phone.PhoneCallService/SendVoiceWithTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PhoneCallServiceServer is the server API for PhoneCallService service.
// All implementations should embed UnimplementedPhoneCallServiceServer
// for forward compatibility
type PhoneCallServiceServer interface {
	// Send voice using the specific template
	SendVoiceWithTemplate(context.Context, *SendVoiceWithTemplateRequest) (*SendVoiceWithTemplateResponse, error)
}

// UnimplementedPhoneCallServiceServer should be embedded to have forward compatible implementations.
type UnimplementedPhoneCallServiceServer struct {
}

func (UnimplementedPhoneCallServiceServer) SendVoiceWithTemplate(context.Context, *SendVoiceWithTemplateRequest) (*SendVoiceWithTemplateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendVoiceWithTemplate not implemented")
}

// UnsafePhoneCallServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PhoneCallServiceServer will
// result in compilation errors.
type UnsafePhoneCallServiceServer interface {
	mustEmbedUnimplementedPhoneCallServiceServer()
}

func RegisterPhoneCallServiceServer(s grpc.ServiceRegistrar, srv PhoneCallServiceServer) {
	s.RegisterService(&PhoneCallService_ServiceDesc, srv)
}

func _PhoneCallService_SendVoiceWithTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendVoiceWithTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhoneCallServiceServer).SendVoiceWithTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spec.proto.extension.v1.phone.PhoneCallService/SendVoiceWithTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhoneCallServiceServer).SendVoiceWithTemplate(ctx, req.(*SendVoiceWithTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PhoneCallService_ServiceDesc is the grpc.ServiceDesc for PhoneCallService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PhoneCallService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "spec.proto.extension.v1.phone.PhoneCallService",
	HandlerType: (*PhoneCallServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendVoiceWithTemplate",
			Handler:    _PhoneCallService_SendVoiceWithTemplate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "phone.proto",
}
